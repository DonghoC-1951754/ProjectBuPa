eventlog_ellen %>%
size_of_selfloops(level = "resource") %>% plot()
eventlog_ellen %>%
size_of_selfloops(level = "resource-activity") %>% plot()
eventlog_ellen %>%
start_activities(level = "log") %>% plot()
eventlog_ellen %>%
start_activities(level = "log")
eventlog_ellen %>%
start_activities(level = "case")
eventlog_ellen %>%
start_activities(level = "activity")
eventlog_ellen %>%
start_activities(level = "resource")
eventlog_ellen %>%
start_activities(level = "resource-activity")
eventlog_ellen %>%
throughput_time(level = "log") %>% plot()
eventlog_ellen %>%
throughput_time(level = "case") %>% plot()
eventlog_ellen %>%
throughput_time(level = "trace") %>% plot()
eventlog_ellen %>%
throughput_time(level = "log") %>% plot()
eventlog_ellen %>%
throughput_time(level = "case") %>% plot()
eventlog_ellen %>%
throughput_time(level = "trace")
eventlog_ellen %>%
trace_coverage(level = "log") %>% plot()
eventlog_ellen %>%
trace_coverage(level = "log") %>% plot()
eventlog_ellen %>%
trace_coverage(level = "log")
eventlog_ellen %>%
trace_coverage(level = "case")
eventlog_ellen %>%
trace_coverage(level = "trace")
eventlog_ellen %>%
trace_length(level = "log")
eventlog_ellen %>%
trace_length(level = "case")
eventlog_ellen %>%
trace_length(level = "trace")
# load packages
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggcorrplot)
library(tinytex)
library(stringr)
library(tidyverse)
library(pander)
library(lubridate)
library(mice)
library(plotly)
library(readr)
library(bupaR)
library(eventdataR)
library(xesreadR)
library(edeaR)
library(processmapR)
library(processmonitR)
#install.packages("bupaR")
#install.packages("eventdataR")
#install.packages("xesreadR")
#install.packages("edeaR")
#install.packages("processmapR")
#install.packages("processmonitR")
eventlog_ellen <- simple_eventlog(
data_exploratory,
case_id = "caseconceptname",
activity_id = "eventconceptname",
timestamp = "eventtimetimestamp",
resource_id = "eventorgresource"
)
# load packages
library(ggplot2)
library(tidyr)
library(dplyr)
library(ggcorrplot)
library(tinytex)
library(stringr)
library(tidyverse)
library(pander)
library(lubridate)
library(mice)
library(plotly)
library(readr)
library(bupaR)
library(eventdataR)
library(xesreadR)
library(edeaR)
library(processmapR)
library(processmonitR)
#install.packages("bupaR")
#install.packages("eventdataR")
#install.packages("xesreadR")
#install.packages("edeaR")
#install.packages("processmapR")
#install.packages("processmonitR")
# load data / source loadscript
data <- read_csv("data.csv")
data <- data %>%
mutate(lifecycle_id = "complete")
# event log building
data$`event time:timestamp` <- dmy_hms(data$`event time:timestamp`)
summary(data)
eventlog <- bupaR::simple_eventlog(eventlog = data, case_id = "case concept:name", activity_id = "event concept:name", timestamp = "event time:timestamp")
# Remove special characters from raw data (activity_frequency() doesn't work on the original eventlog)
data_exploratory <- data
colnames(data_exploratory) <- gsub("[^[:alnum:]_]", "", colnames(data))
eventlog_ellen <- simple_eventlog(
data_exploratory,
case_id = "caseconceptname",
activity_id = "eventconceptname",
timestamp = "eventtimetimestamp",
resource_id = "eventorgresource"
)
#aantal cases dat beschreve zijn in de evnt log
n_cases(eventlog)
n_cases(eventlog_ellen)
#aantal activiteitenin event log
n_activities(eventlog)
n_activities(eventlog_ellen)
#Geeft weer hoe vaak iedere activiteit voorkomt
activities(eventlog_ellen)
#output klopt precies niet want die geeft dat niet weer per activiteit
#Geeft weer hoe vaak iedere activiteit voorkomt
activities(eventlog_ellen) %>% plot()
#output klopt precies niet want die geeft dat niet weer per activiteit
#Geeft weer hoe vaak iedere activiteit voorkomt
activities(eventlog_ellen)
#output klopt precies niet want die geeft dat niet weer per activiteit
#lijst van aale traces
traces(eventlog)
#visualiseert de traces
trace_explorer(eventlog, n_traces = 10)
#aantal traces
n_traces(eventlog)
resource_frequency(eventlog_ellen, level = "resource")
eventlog_ellen %>%
resource_frequency(level = "log")
eventlog_ellen %>%
resource_frequency(level = "log") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "log") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "log") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "log")
eventlog_ellen %>%
resource_frequency(level = "log") %>% plot()
eventlog_ellen  %>%
filter(resource_frequency(eventlog_ellen) != 399090 ) %>%
resource_frequency(level = "log") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "case")
eventlog_ellen %>%
resource_frequency(level = "case") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "activity")
eventlog_ellen %>%
resource_frequency(level = "activity")%>% plot()
eventlog_ellen %>%
resource_frequency(level = "resource")
eventlog_ellen %>%
resource_frequency(level = "resource") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "resource") %>%
filter(absolute > 10000) %>% plot()
eventlog_ellen %>%
resource_frequency(level = "case") %>%
filter(max > 10) %>% plot()
eventlog_ellen %>%
resource_frequency(level = "resource-activity")
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname = c("Record Goods Receipt"))
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname == c("Record Goods Receipt"))
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname == c("Record Goods Receipt")) %>% plot()
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname == c("Record Goods Receipt")) %>%
filter(resource == c("user_002")) %>%
plot()
eventlog_ellen %>%
resource_frequency(level = "resource-activity")
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname == c("Record Goods Receipt")) %>%
filter(eventorgresource == c("user_002")) %>%
plot()
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname == c("Record Goods Receipt", "Create Purchase Requisition Item")) %>%
filter(eventorgresource == c("user_002", "user_029")) %>%
plot()
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname == c("Record Goods Receipt", "Create Purchase Requisition Item")) %>%
filter(eventorgresource == c("user_002", "user_029"))
eventlog_ellen %>%
resource_frequency(level = "resource-activity") %>%
filter(eventconceptname == c("Record Goods Receipt", "Create Purchase Requisition Item")) %>%
plot()
eventlog_ellen %>%
resource_involvement(level = "case")
eventlog_ellen %>%
resource_involvement(level = "case") %>% plot()
```{r}
eventlog_ellen %>%
resource_frequency(level = "resource-activity")
eventlog_ellen %>%
resource_involvement(level = "resource")
eventlog_ellen %>%
resource_involvement(level = "resource") %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(absolute > 10) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(absolute > 15) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "resource") %>%
filter(absolute > 10000) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "resource-activity")
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>% plot()
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>%
filter(absolute > 10000) %>% plot()
?plot()
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>%
filter(absolute > 10000) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>%
filter(absolute > 10000) %>% plot(label_color = "black")
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>%
filter(absolute > 10000) %>% plot(label_color = "purple")
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>%
filter(absolute > 10000) %>% plot(text_color = "purple")
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>%
filter(absolute > 10000) %>% plot(text = "purple")
eventlog_ellen %>%
resource_involvement(level = "resource-activity") %>%
filter(absolute > 10000) %>% plot(label = "purple")
eventlog_ellen %>%
resource_specialisation(level = "log")
eventlog_ellen %>%
resource_specialisation(level = "log") %>% plot()
eventlog_ellen %>%
resource_specialisation(level = "activity")
eventlog_ellen %>%
resource_specialisation(level = "activity") %>% plot()
eventlog_ellen %>%
resource_specialisation(level = "resource")
eventlog_ellen %>%
resource_specialisation(level = "resource") %>% plot()
eventlog_ellen %>%
resource_specialisation(level = "resource") %>%
filter(absolute > 10) %>% plot()
eventlog_ellen %>%
resource_specialisation(level = "resource") %>%
filter(absolute < 2) %>% plot()
eventlog_ellen %>%
resource_specialisation(level = "resource") %>%
filter(absolute < 2) %>%
slice(1:10) %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "log", type = "redo") %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "log", type = "redo")
eventlog_ellen %>%
size_of_repetitions(level = "log", type = "repeat")
eventlog_ellen %>%
size_of_repetitions(level = "log", type = "repeat") %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "log", type = "repeat")
eventlog_ellen %>%
size_of_repetitions(level = "log", type = "repeat") %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat")
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat") %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "activity", type = "repeat")
eventlog_ellen %>%
size_of_repetitions(level = "activity", type = "repeat") %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "resource", type = "repeat")
eventlog_ellen %>%
size_of_repetitions(level = "resource", type = "repeat") %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "resource-activity", type = "repeat")
eventlog_ellen %>%
size_of_repetitions(level = "resource-activity", type = "repeat") %>% plot()
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat") %>%
arrange(desc(max))
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat") %>%
arrange(desc(number_of_repetitions)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat")
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "case", type = "repeat") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "activity", type = "repeat") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "activity", type = "repeat") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "resource", type = "repeat") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "resource", type = "repeat") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "resource-activity", type = "repeat") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_repetitions(level = "resource-activity", type = "repeat") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "log", type = "redo") %>% plot()
eventlog_ellen %>%
size_of_selfloops(level = "log", type = "redo")
eventlog_ellen %>%
size_of_selfloops(level = "log", type = "redo")
eventlog_ellen %>%
size_of_selfloops(level = "case", type = "redo")
eventlog_ellen %>%
size_of_selfloops(level = "case", type = "redo") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "case", type = "redo") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "activity", type = "redo") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "activity", type = "redo") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "resource", type = "redo") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "resource", type = "redo") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "resource-activity", type = "redo") %>%
arrange(desc(number_of_selfloops)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "resource-activity", type = "redo") %>%
arrange(number_of_selfloops) %>%
slice(1:10)
eventlog_ellen %>%
start_activities(level = "log")
eventlog_ellen %>%
start_activities(level = "case")
eventlog_ellen %>%
start_activities(level = "case") %>% plot()
eventlog_ellen %>%
start_activities(level = "case")
eventlog_ellen %>%
start_activities(level = "activity")
eventlog_ellen %>%
start_activities(level = "activity")
eventlog_ellen %>%
start_activities(level = "activity") %>% plot()
eventlog_ellen %>%
start_activities(level = "resource")
eventlog_ellen %>%
start_activities(level = "resource") %>% plot()
eventlog_ellen %>%
start_activities(level = "resource-activity")
eventlog_ellen %>%
start_activities(level = "resource-activity") %>% plot()
eventlog_ellen %>%
throughput_time(level = "log", units = "weeks") %>% plot()
eventlog_ellen %>%
throughput_time(level = "log", units = "weeks") %>% plot()
eventlog_ellen %>%
throughput_time(level = "log", units = "weeks")
eventlog_ellen %>%
throughput_time(level = "case", units = "weeks")
eventlog_ellen %>%
throughput_time(level = "case", units = "weeks") %>% plot()
eventlog_ellen %>%
throughput_time(level = "trace", units = "weeks")
eventlog_ellen %>%
trace_coverage(level = "log")
eventlog_ellen %>%
trace_coverage(level = "case")
eventlog_ellen %>%
trace_coverage(level = "trace")
eventlog_ellen %>%
trace_length(level = "log")
eventlog_ellen %>%
trace_length(level = "case")
eventlog_ellen %>%
trace_length(level = "trace")
eventlog_ellen %>%
resource_frequency(level = "log")
eventlog_ellen %>%
resource_frequency(level = "log") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "case")
eventlog_ellen %>%
resource_frequency(level = "case") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "case") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "case") %>% plot()
eventlog_ellen %>%
resource_frequency(level = "case")
eventlog_ellen %>%
resource_frequency(level = "case") %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.01) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.01) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.015) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.01) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.015) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.2) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.01) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.015) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.02) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.01) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.015) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.02) %>% plot()
eventlog_ellen %>%
resource_involvement(level = "case") %>%
filter(relative > 0.03) %>% plot()
eventlog_ellen %>%
resource_specialisation(level = "resource") %>%
filter(absolute > 10) %>%
slice(1:10) %>% plot()
eventlog_ellen %>%
throughput_time(level = "log", units = "weeks") %>% plot()
eventlog_ellen %>%
throughput_time(level = "log", units = "weeks")
eventlog_ellen %>%
throughput_time(level = "log", units = "days")
eventlog_ellen %>%
size_of_selfloops(level = "resource-activity", type = "redo") %>%
arrange(desc(total)) %>%
slice(1:10)
eventlog_ellen %>%
size_of_selfloops(level = "resource-activity", type = "redo") %>%
arrange(total) %>%
slice(1:10)
